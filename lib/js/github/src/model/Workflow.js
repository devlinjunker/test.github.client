/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Workflow model module.
 * @module model/Workflow
 * @version 0.0.5
 */
class Workflow {
    /**
     * Constructs a new <code>Workflow</code>.
     * A GitHub Actions workflow
     * @alias module:model/Workflow
     * @param badgeUrl {String} 
     * @param createdAt {Date} 
     * @param htmlUrl {String} 
     * @param id {Number} 
     * @param name {String} 
     * @param nodeId {String} 
     * @param path {String} 
     * @param state {module:model/Workflow.StateEnum} 
     * @param updatedAt {Date} 
     * @param url {String} 
     */
    constructor(badgeUrl, createdAt, htmlUrl, id, name, nodeId, path, state, updatedAt, url) { 
        
        Workflow.initialize(this, badgeUrl, createdAt, htmlUrl, id, name, nodeId, path, state, updatedAt, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, badgeUrl, createdAt, htmlUrl, id, name, nodeId, path, state, updatedAt, url) { 
        obj['badge_url'] = badgeUrl;
        obj['created_at'] = createdAt;
        obj['html_url'] = htmlUrl;
        obj['id'] = id;
        obj['name'] = name;
        obj['node_id'] = nodeId;
        obj['path'] = path;
        obj['state'] = state;
        obj['updated_at'] = updatedAt;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>Workflow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Workflow} obj Optional instance to populate.
     * @return {module:model/Workflow} The populated <code>Workflow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Workflow();

            if (data.hasOwnProperty('badge_url')) {
                obj['badge_url'] = ApiClient.convertToType(data['badge_url'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('deleted_at')) {
                obj['deleted_at'] = ApiClient.convertToType(data['deleted_at'], 'Date');
            }
            if (data.hasOwnProperty('html_url')) {
                obj['html_url'] = ApiClient.convertToType(data['html_url'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('node_id')) {
                obj['node_id'] = ApiClient.convertToType(data['node_id'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} badge_url
 */
Workflow.prototype['badge_url'] = undefined;

/**
 * @member {Date} created_at
 */
Workflow.prototype['created_at'] = undefined;

/**
 * @member {Date} deleted_at
 */
Workflow.prototype['deleted_at'] = undefined;

/**
 * @member {String} html_url
 */
Workflow.prototype['html_url'] = undefined;

/**
 * @member {Number} id
 */
Workflow.prototype['id'] = undefined;

/**
 * @member {String} name
 */
Workflow.prototype['name'] = undefined;

/**
 * @member {String} node_id
 */
Workflow.prototype['node_id'] = undefined;

/**
 * @member {String} path
 */
Workflow.prototype['path'] = undefined;

/**
 * @member {module:model/Workflow.StateEnum} state
 */
Workflow.prototype['state'] = undefined;

/**
 * @member {Date} updated_at
 */
Workflow.prototype['updated_at'] = undefined;

/**
 * @member {String} url
 */
Workflow.prototype['url'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
Workflow['StateEnum'] = {

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "deleted"
     * @const
     */
    "deleted": "deleted"
};



export default Workflow;

