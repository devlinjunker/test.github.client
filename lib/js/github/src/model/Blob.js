/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Blob model module.
 * @module model/Blob
 * @version 0.0.5
 */
class Blob {
    /**
     * Constructs a new <code>Blob</code>.
     * Blob
     * @alias module:model/Blob
     * @param content {String} 
     * @param encoding {String} 
     * @param nodeId {String} 
     * @param sha {String} 
     * @param size {Number} 
     * @param url {String} 
     */
    constructor(content, encoding, nodeId, sha, size, url) { 
        
        Blob.initialize(this, content, encoding, nodeId, sha, size, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, content, encoding, nodeId, sha, size, url) { 
        obj['content'] = content;
        obj['encoding'] = encoding;
        obj['node_id'] = nodeId;
        obj['sha'] = sha;
        obj['size'] = size;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>Blob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Blob} obj Optional instance to populate.
     * @return {module:model/Blob} The populated <code>Blob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Blob();

            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('encoding')) {
                obj['encoding'] = ApiClient.convertToType(data['encoding'], 'String');
            }
            if (data.hasOwnProperty('highlighted_content')) {
                obj['highlighted_content'] = ApiClient.convertToType(data['highlighted_content'], 'String');
            }
            if (data.hasOwnProperty('node_id')) {
                obj['node_id'] = ApiClient.convertToType(data['node_id'], 'String');
            }
            if (data.hasOwnProperty('sha')) {
                obj['sha'] = ApiClient.convertToType(data['sha'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} content
 */
Blob.prototype['content'] = undefined;

/**
 * @member {String} encoding
 */
Blob.prototype['encoding'] = undefined;

/**
 * @member {String} highlighted_content
 */
Blob.prototype['highlighted_content'] = undefined;

/**
 * @member {String} node_id
 */
Blob.prototype['node_id'] = undefined;

/**
 * @member {String} sha
 */
Blob.prototype['sha'] = undefined;

/**
 * @member {Number} size
 */
Blob.prototype['size'] = undefined;

/**
 * @member {String} url
 */
Blob.prototype['url'] = undefined;






export default Blob;

