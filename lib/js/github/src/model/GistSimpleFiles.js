/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GistSimpleFiles model module.
 * @module model/GistSimpleFiles
 * @version 0.0.5
 */
class GistSimpleFiles {
    /**
     * Constructs a new <code>GistSimpleFiles</code>.
     * @alias module:model/GistSimpleFiles
     */
    constructor() { 
        
        GistSimpleFiles.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GistSimpleFiles</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GistSimpleFiles} obj Optional instance to populate.
     * @return {module:model/GistSimpleFiles} The populated <code>GistSimpleFiles</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GistSimpleFiles();

            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('filename')) {
                obj['filename'] = ApiClient.convertToType(data['filename'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('raw_url')) {
                obj['raw_url'] = ApiClient.convertToType(data['raw_url'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('truncated')) {
                obj['truncated'] = ApiClient.convertToType(data['truncated'], 'Boolean');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} content
 */
GistSimpleFiles.prototype['content'] = undefined;

/**
 * @member {String} filename
 */
GistSimpleFiles.prototype['filename'] = undefined;

/**
 * @member {String} language
 */
GistSimpleFiles.prototype['language'] = undefined;

/**
 * @member {String} raw_url
 */
GistSimpleFiles.prototype['raw_url'] = undefined;

/**
 * @member {Number} size
 */
GistSimpleFiles.prototype['size'] = undefined;

/**
 * @member {Boolean} truncated
 */
GistSimpleFiles.prototype['truncated'] = undefined;

/**
 * @member {String} type
 */
GistSimpleFiles.prototype['type'] = undefined;






export default GistSimpleFiles;

