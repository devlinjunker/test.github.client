/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PorterAuthor model module.
 * @module model/PorterAuthor
 * @version 0.0.5
 */
class PorterAuthor {
    /**
     * Constructs a new <code>PorterAuthor</code>.
     * Porter Author
     * @alias module:model/PorterAuthor
     * @param email {String} 
     * @param id {Number} 
     * @param importUrl {String} 
     * @param name {String} 
     * @param remoteId {String} 
     * @param remoteName {String} 
     * @param url {String} 
     */
    constructor(email, id, importUrl, name, remoteId, remoteName, url) { 
        
        PorterAuthor.initialize(this, email, id, importUrl, name, remoteId, remoteName, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, email, id, importUrl, name, remoteId, remoteName, url) { 
        obj['email'] = email;
        obj['id'] = id;
        obj['import_url'] = importUrl;
        obj['name'] = name;
        obj['remote_id'] = remoteId;
        obj['remote_name'] = remoteName;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>PorterAuthor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PorterAuthor} obj Optional instance to populate.
     * @return {module:model/PorterAuthor} The populated <code>PorterAuthor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PorterAuthor();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('import_url')) {
                obj['import_url'] = ApiClient.convertToType(data['import_url'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('remote_id')) {
                obj['remote_id'] = ApiClient.convertToType(data['remote_id'], 'String');
            }
            if (data.hasOwnProperty('remote_name')) {
                obj['remote_name'] = ApiClient.convertToType(data['remote_name'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} email
 */
PorterAuthor.prototype['email'] = undefined;

/**
 * @member {Number} id
 */
PorterAuthor.prototype['id'] = undefined;

/**
 * @member {String} import_url
 */
PorterAuthor.prototype['import_url'] = undefined;

/**
 * @member {String} name
 */
PorterAuthor.prototype['name'] = undefined;

/**
 * @member {String} remote_id
 */
PorterAuthor.prototype['remote_id'] = undefined;

/**
 * @member {String} remote_name
 */
PorterAuthor.prototype['remote_name'] = undefined;

/**
 * @member {String} url
 */
PorterAuthor.prototype['url'] = undefined;






export default PorterAuthor;

