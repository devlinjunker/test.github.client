/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventPayloadPages from './EventPayloadPages';
import IssueComment from './IssueComment';
import IssueSimple from './IssueSimple';

/**
 * The EventPayload model module.
 * @module model/EventPayload
 * @version 0.0.5
 */
class EventPayload {
    /**
     * Constructs a new <code>EventPayload</code>.
     * @alias module:model/EventPayload
     * @param action {String} 
     */
    constructor(action) { 
        
        EventPayload.initialize(this, action);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action) { 
        obj['action'] = action;
    }

    /**
     * Constructs a <code>EventPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventPayload} obj Optional instance to populate.
     * @return {module:model/EventPayload} The populated <code>EventPayload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventPayload();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = IssueComment.constructFromObject(data['comment']);
            }
            if (data.hasOwnProperty('issue')) {
                obj['issue'] = IssueSimple.constructFromObject(data['issue']);
            }
            if (data.hasOwnProperty('pages')) {
                obj['pages'] = ApiClient.convertToType(data['pages'], [EventPayloadPages]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} action
 */
EventPayload.prototype['action'] = undefined;

/**
 * @member {module:model/IssueComment} comment
 */
EventPayload.prototype['comment'] = undefined;

/**
 * @member {module:model/IssueSimple} issue
 */
EventPayload.prototype['issue'] = undefined;

/**
 * @member {Array.<module:model/EventPayloadPages>} pages
 */
EventPayload.prototype['pages'] = undefined;






export default EventPayload;

