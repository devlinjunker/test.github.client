/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineObject68 model module.
 * @module model/InlineObject68
 * @version 0.0.5
 */
class InlineObject68 {
    /**
     * Constructs a new <code>InlineObject68</code>.
     * @alias module:model/InlineObject68
     * @param ref {String} The name of the fully qualified reference (ie: `refs/heads/master`). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.
     * @param sha {String} The SHA1 value for this reference.
     */
    constructor(ref, sha) { 
        
        InlineObject68.initialize(this, ref, sha);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ref, sha) { 
        obj['ref'] = ref;
        obj['sha'] = sha;
    }

    /**
     * Constructs a <code>InlineObject68</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject68} obj Optional instance to populate.
     * @return {module:model/InlineObject68} The populated <code>InlineObject68</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject68();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('ref')) {
                obj['ref'] = ApiClient.convertToType(data['ref'], 'String');
            }
            if (data.hasOwnProperty('sha')) {
                obj['sha'] = ApiClient.convertToType(data['sha'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} key
 */
InlineObject68.prototype['key'] = undefined;

/**
 * The name of the fully qualified reference (ie: `refs/heads/master`). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.
 * @member {String} ref
 */
InlineObject68.prototype['ref'] = undefined;

/**
 * The SHA1 value for this reference.
 * @member {String} sha
 */
InlineObject68.prototype['sha'] = undefined;






export default InlineObject68;

