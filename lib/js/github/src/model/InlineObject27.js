/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineObject27 model module.
 * @module model/InlineObject27
 * @version 0.0.5
 */
class InlineObject27 {
    /**
     * Constructs a new <code>InlineObject27</code>.
     * @alias module:model/InlineObject27
     * @param name {String} The name of the team.
     */
    constructor(name) { 
        
        InlineObject27.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>InlineObject27</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject27} obj Optional instance to populate.
     * @return {module:model/InlineObject27} The populated <code>InlineObject27</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject27();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('maintainers')) {
                obj['maintainers'] = ApiClient.convertToType(data['maintainers'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parent_team_id')) {
                obj['parent_team_id'] = ApiClient.convertToType(data['parent_team_id'], 'Number');
            }
            if (data.hasOwnProperty('permission')) {
                obj['permission'] = ApiClient.convertToType(data['permission'], 'String');
            }
            if (data.hasOwnProperty('privacy')) {
                obj['privacy'] = ApiClient.convertToType(data['privacy'], 'String');
            }
            if (data.hasOwnProperty('repo_names')) {
                obj['repo_names'] = ApiClient.convertToType(data['repo_names'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * The description of the team.
 * @member {String} description
 */
InlineObject27.prototype['description'] = undefined;

/**
 * List GitHub IDs for organization members who will become team maintainers.
 * @member {Array.<String>} maintainers
 */
InlineObject27.prototype['maintainers'] = undefined;

/**
 * The name of the team.
 * @member {String} name
 */
InlineObject27.prototype['name'] = undefined;

/**
 * The ID of a team to set as the parent team.
 * @member {Number} parent_team_id
 */
InlineObject27.prototype['parent_team_id'] = undefined;

/**
 * **Deprecated**. The permission that new repositories will be added to the team with when none is specified. Can be one of:   \\* `pull` - team members can pull, but not push to or administer newly-added repositories.   \\* `push` - team members can pull and push, but not administer newly-added repositories.   \\* `admin` - team members can pull, push and administer newly-added repositories.
 * @member {module:model/InlineObject27.PermissionEnum} permission
 * @default 'pull'
 */
InlineObject27.prototype['permission'] = 'pull';

/**
 * The level of privacy this team should have. The options are:   **For a non-nested team:**   \\* `secret` - only visible to organization owners and members of this team.   \\* `closed` - visible to all members of this organization.   Default: `secret`   **For a parent or child team:**   \\* `closed` - visible to all members of this organization.   Default for child team: `closed`
 * @member {module:model/InlineObject27.PrivacyEnum} privacy
 */
InlineObject27.prototype['privacy'] = undefined;

/**
 * The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to.
 * @member {Array.<String>} repo_names
 */
InlineObject27.prototype['repo_names'] = undefined;





/**
 * Allowed values for the <code>permission</code> property.
 * @enum {String}
 * @readonly
 */
InlineObject27['PermissionEnum'] = {

    /**
     * value: "pull"
     * @const
     */
    "pull": "pull",

    /**
     * value: "push"
     * @const
     */
    "push": "push",

    /**
     * value: "admin"
     * @const
     */
    "admin": "admin"
};


/**
 * Allowed values for the <code>privacy</code> property.
 * @enum {String}
 * @readonly
 */
InlineObject27['PrivacyEnum'] = {

    /**
     * value: "secret"
     * @const
     */
    "secret": "secret",

    /**
     * value: "closed"
     * @const
     */
    "closed": "closed"
};



export default InlineObject27;

