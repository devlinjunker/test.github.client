/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineObject62 model module.
 * @module model/InlineObject62
 * @version 0.0.5
 */
class InlineObject62 {
    /**
     * Constructs a new <code>InlineObject62</code>.
     * @alias module:model/InlineObject62
     * @param ref {String} The ref to deploy. This can be a branch, tag, or SHA.
     */
    constructor(ref) { 
        
        InlineObject62.initialize(this, ref);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ref) { 
        obj['ref'] = ref;
    }

    /**
     * Constructs a <code>InlineObject62</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject62} obj Optional instance to populate.
     * @return {module:model/InlineObject62} The populated <code>InlineObject62</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject62();

            if (data.hasOwnProperty('auto_merge')) {
                obj['auto_merge'] = ApiClient.convertToType(data['auto_merge'], 'Boolean');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ApiClient.convertToType(data['environment'], 'String');
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], 'String');
            }
            if (data.hasOwnProperty('production_environment')) {
                obj['production_environment'] = ApiClient.convertToType(data['production_environment'], 'Boolean');
            }
            if (data.hasOwnProperty('ref')) {
                obj['ref'] = ApiClient.convertToType(data['ref'], 'String');
            }
            if (data.hasOwnProperty('required_contexts')) {
                obj['required_contexts'] = ApiClient.convertToType(data['required_contexts'], ['String']);
            }
            if (data.hasOwnProperty('task')) {
                obj['task'] = ApiClient.convertToType(data['task'], 'String');
            }
            if (data.hasOwnProperty('transient_environment')) {
                obj['transient_environment'] = ApiClient.convertToType(data['transient_environment'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch.
 * @member {Boolean} auto_merge
 * @default true
 */
InlineObject62.prototype['auto_merge'] = true;

/**
 * @member {String} created_at
 */
InlineObject62.prototype['created_at'] = undefined;

/**
 * Short description of the deployment.
 * @member {String} description
 * @default ''
 */
InlineObject62.prototype['description'] = '';

/**
 * Name for the target deployment environment (e.g., `production`, `staging`, `qa`).
 * @member {String} environment
 * @default 'production'
 */
InlineObject62.prototype['environment'] = 'production';

/**
 * JSON payload with extra information about the deployment.
 * @member {String} payload
 * @default ''
 */
InlineObject62.prototype['payload'] = '';

/**
 * Specifies if the given environment is one that end-users directly interact with. Default: `true` when `environment` is `production` and `false` otherwise.   **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type.
 * @member {Boolean} production_environment
 */
InlineObject62.prototype['production_environment'] = undefined;

/**
 * The ref to deploy. This can be a branch, tag, or SHA.
 * @member {String} ref
 */
InlineObject62.prototype['ref'] = undefined;

/**
 * The [status](https://developer.github.com/v3/repos/statuses/) contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts.
 * @member {Array.<String>} required_contexts
 */
InlineObject62.prototype['required_contexts'] = undefined;

/**
 * Specifies a task to execute (e.g., `deploy` or `deploy:migrations`).
 * @member {String} task
 * @default 'deploy'
 */
InlineObject62.prototype['task'] = 'deploy';

/**
 * Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: `false`   **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type. **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://developer.github.com/v3/previews/#enhanced-deployments) custom media type.
 * @member {Boolean} transient_environment
 * @default false
 */
InlineObject62.prototype['transient_environment'] = false;






export default InlineObject62;

