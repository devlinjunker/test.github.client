/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse200 model module.
 * @module model/InlineResponse200
 * @version 0.0.5
 */
class InlineResponse200 {
    /**
     * Constructs a new <code>InlineResponse200</code>.
     * @alias module:model/InlineResponse200
     * @param authorizationsUrl {String} 
     * @param codeSearchUrl {String} 
     * @param commitSearchUrl {String} 
     * @param currentUserAuthorizationsHtmlUrl {String} 
     * @param currentUserRepositoriesUrl {String} 
     * @param currentUserUrl {String} 
     * @param emailsUrl {String} 
     * @param emojisUrl {String} 
     * @param eventsUrl {String} 
     * @param feedsUrl {String} 
     * @param followersUrl {String} 
     * @param followingUrl {String} 
     * @param gistsUrl {String} 
     * @param hubUrl {String} 
     * @param issueSearchUrl {String} 
     * @param issuesUrl {String} 
     * @param keysUrl {String} 
     * @param labelSearchUrl {String} 
     * @param notificationsUrl {String} 
     * @param organizationRepositoriesUrl {String} 
     * @param organizationTeamsUrl {String} 
     * @param organizationUrl {String} 
     * @param publicGistsUrl {String} 
     * @param rateLimitUrl {String} 
     * @param repositorySearchUrl {String} 
     * @param repositoryUrl {String} 
     * @param starredGistsUrl {String} 
     * @param starredUrl {String} 
     * @param userOrganizationsUrl {String} 
     * @param userRepositoriesUrl {String} 
     * @param userSearchUrl {String} 
     * @param userUrl {String} 
     */
    constructor(authorizationsUrl, codeSearchUrl, commitSearchUrl, currentUserAuthorizationsHtmlUrl, currentUserRepositoriesUrl, currentUserUrl, emailsUrl, emojisUrl, eventsUrl, feedsUrl, followersUrl, followingUrl, gistsUrl, hubUrl, issueSearchUrl, issuesUrl, keysUrl, labelSearchUrl, notificationsUrl, organizationRepositoriesUrl, organizationTeamsUrl, organizationUrl, publicGistsUrl, rateLimitUrl, repositorySearchUrl, repositoryUrl, starredGistsUrl, starredUrl, userOrganizationsUrl, userRepositoriesUrl, userSearchUrl, userUrl) { 
        
        InlineResponse200.initialize(this, authorizationsUrl, codeSearchUrl, commitSearchUrl, currentUserAuthorizationsHtmlUrl, currentUserRepositoriesUrl, currentUserUrl, emailsUrl, emojisUrl, eventsUrl, feedsUrl, followersUrl, followingUrl, gistsUrl, hubUrl, issueSearchUrl, issuesUrl, keysUrl, labelSearchUrl, notificationsUrl, organizationRepositoriesUrl, organizationTeamsUrl, organizationUrl, publicGistsUrl, rateLimitUrl, repositorySearchUrl, repositoryUrl, starredGistsUrl, starredUrl, userOrganizationsUrl, userRepositoriesUrl, userSearchUrl, userUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, authorizationsUrl, codeSearchUrl, commitSearchUrl, currentUserAuthorizationsHtmlUrl, currentUserRepositoriesUrl, currentUserUrl, emailsUrl, emojisUrl, eventsUrl, feedsUrl, followersUrl, followingUrl, gistsUrl, hubUrl, issueSearchUrl, issuesUrl, keysUrl, labelSearchUrl, notificationsUrl, organizationRepositoriesUrl, organizationTeamsUrl, organizationUrl, publicGistsUrl, rateLimitUrl, repositorySearchUrl, repositoryUrl, starredGistsUrl, starredUrl, userOrganizationsUrl, userRepositoriesUrl, userSearchUrl, userUrl) { 
        obj['authorizations_url'] = authorizationsUrl;
        obj['code_search_url'] = codeSearchUrl;
        obj['commit_search_url'] = commitSearchUrl;
        obj['current_user_authorizations_html_url'] = currentUserAuthorizationsHtmlUrl;
        obj['current_user_repositories_url'] = currentUserRepositoriesUrl;
        obj['current_user_url'] = currentUserUrl;
        obj['emails_url'] = emailsUrl;
        obj['emojis_url'] = emojisUrl;
        obj['events_url'] = eventsUrl;
        obj['feeds_url'] = feedsUrl;
        obj['followers_url'] = followersUrl;
        obj['following_url'] = followingUrl;
        obj['gists_url'] = gistsUrl;
        obj['hub_url'] = hubUrl;
        obj['issue_search_url'] = issueSearchUrl;
        obj['issues_url'] = issuesUrl;
        obj['keys_url'] = keysUrl;
        obj['label_search_url'] = labelSearchUrl;
        obj['notifications_url'] = notificationsUrl;
        obj['organization_repositories_url'] = organizationRepositoriesUrl;
        obj['organization_teams_url'] = organizationTeamsUrl;
        obj['organization_url'] = organizationUrl;
        obj['public_gists_url'] = publicGistsUrl;
        obj['rate_limit_url'] = rateLimitUrl;
        obj['repository_search_url'] = repositorySearchUrl;
        obj['repository_url'] = repositoryUrl;
        obj['starred_gists_url'] = starredGistsUrl;
        obj['starred_url'] = starredUrl;
        obj['user_organizations_url'] = userOrganizationsUrl;
        obj['user_repositories_url'] = userRepositoriesUrl;
        obj['user_search_url'] = userSearchUrl;
        obj['user_url'] = userUrl;
    }

    /**
     * Constructs a <code>InlineResponse200</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse200} obj Optional instance to populate.
     * @return {module:model/InlineResponse200} The populated <code>InlineResponse200</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse200();

            if (data.hasOwnProperty('authorizations_url')) {
                obj['authorizations_url'] = ApiClient.convertToType(data['authorizations_url'], 'String');
            }
            if (data.hasOwnProperty('code_search_url')) {
                obj['code_search_url'] = ApiClient.convertToType(data['code_search_url'], 'String');
            }
            if (data.hasOwnProperty('commit_search_url')) {
                obj['commit_search_url'] = ApiClient.convertToType(data['commit_search_url'], 'String');
            }
            if (data.hasOwnProperty('current_user_authorizations_html_url')) {
                obj['current_user_authorizations_html_url'] = ApiClient.convertToType(data['current_user_authorizations_html_url'], 'String');
            }
            if (data.hasOwnProperty('current_user_repositories_url')) {
                obj['current_user_repositories_url'] = ApiClient.convertToType(data['current_user_repositories_url'], 'String');
            }
            if (data.hasOwnProperty('current_user_url')) {
                obj['current_user_url'] = ApiClient.convertToType(data['current_user_url'], 'String');
            }
            if (data.hasOwnProperty('emails_url')) {
                obj['emails_url'] = ApiClient.convertToType(data['emails_url'], 'String');
            }
            if (data.hasOwnProperty('emojis_url')) {
                obj['emojis_url'] = ApiClient.convertToType(data['emojis_url'], 'String');
            }
            if (data.hasOwnProperty('events_url')) {
                obj['events_url'] = ApiClient.convertToType(data['events_url'], 'String');
            }
            if (data.hasOwnProperty('feeds_url')) {
                obj['feeds_url'] = ApiClient.convertToType(data['feeds_url'], 'String');
            }
            if (data.hasOwnProperty('followers_url')) {
                obj['followers_url'] = ApiClient.convertToType(data['followers_url'], 'String');
            }
            if (data.hasOwnProperty('following_url')) {
                obj['following_url'] = ApiClient.convertToType(data['following_url'], 'String');
            }
            if (data.hasOwnProperty('gists_url')) {
                obj['gists_url'] = ApiClient.convertToType(data['gists_url'], 'String');
            }
            if (data.hasOwnProperty('hub_url')) {
                obj['hub_url'] = ApiClient.convertToType(data['hub_url'], 'String');
            }
            if (data.hasOwnProperty('issue_search_url')) {
                obj['issue_search_url'] = ApiClient.convertToType(data['issue_search_url'], 'String');
            }
            if (data.hasOwnProperty('issues_url')) {
                obj['issues_url'] = ApiClient.convertToType(data['issues_url'], 'String');
            }
            if (data.hasOwnProperty('keys_url')) {
                obj['keys_url'] = ApiClient.convertToType(data['keys_url'], 'String');
            }
            if (data.hasOwnProperty('label_search_url')) {
                obj['label_search_url'] = ApiClient.convertToType(data['label_search_url'], 'String');
            }
            if (data.hasOwnProperty('notifications_url')) {
                obj['notifications_url'] = ApiClient.convertToType(data['notifications_url'], 'String');
            }
            if (data.hasOwnProperty('organization_repositories_url')) {
                obj['organization_repositories_url'] = ApiClient.convertToType(data['organization_repositories_url'], 'String');
            }
            if (data.hasOwnProperty('organization_teams_url')) {
                obj['organization_teams_url'] = ApiClient.convertToType(data['organization_teams_url'], 'String');
            }
            if (data.hasOwnProperty('organization_url')) {
                obj['organization_url'] = ApiClient.convertToType(data['organization_url'], 'String');
            }
            if (data.hasOwnProperty('public_gists_url')) {
                obj['public_gists_url'] = ApiClient.convertToType(data['public_gists_url'], 'String');
            }
            if (data.hasOwnProperty('rate_limit_url')) {
                obj['rate_limit_url'] = ApiClient.convertToType(data['rate_limit_url'], 'String');
            }
            if (data.hasOwnProperty('repository_search_url')) {
                obj['repository_search_url'] = ApiClient.convertToType(data['repository_search_url'], 'String');
            }
            if (data.hasOwnProperty('repository_url')) {
                obj['repository_url'] = ApiClient.convertToType(data['repository_url'], 'String');
            }
            if (data.hasOwnProperty('starred_gists_url')) {
                obj['starred_gists_url'] = ApiClient.convertToType(data['starred_gists_url'], 'String');
            }
            if (data.hasOwnProperty('starred_url')) {
                obj['starred_url'] = ApiClient.convertToType(data['starred_url'], 'String');
            }
            if (data.hasOwnProperty('topic_search_url')) {
                obj['topic_search_url'] = ApiClient.convertToType(data['topic_search_url'], 'String');
            }
            if (data.hasOwnProperty('user_organizations_url')) {
                obj['user_organizations_url'] = ApiClient.convertToType(data['user_organizations_url'], 'String');
            }
            if (data.hasOwnProperty('user_repositories_url')) {
                obj['user_repositories_url'] = ApiClient.convertToType(data['user_repositories_url'], 'String');
            }
            if (data.hasOwnProperty('user_search_url')) {
                obj['user_search_url'] = ApiClient.convertToType(data['user_search_url'], 'String');
            }
            if (data.hasOwnProperty('user_url')) {
                obj['user_url'] = ApiClient.convertToType(data['user_url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} authorizations_url
 */
InlineResponse200.prototype['authorizations_url'] = undefined;

/**
 * @member {String} code_search_url
 */
InlineResponse200.prototype['code_search_url'] = undefined;

/**
 * @member {String} commit_search_url
 */
InlineResponse200.prototype['commit_search_url'] = undefined;

/**
 * @member {String} current_user_authorizations_html_url
 */
InlineResponse200.prototype['current_user_authorizations_html_url'] = undefined;

/**
 * @member {String} current_user_repositories_url
 */
InlineResponse200.prototype['current_user_repositories_url'] = undefined;

/**
 * @member {String} current_user_url
 */
InlineResponse200.prototype['current_user_url'] = undefined;

/**
 * @member {String} emails_url
 */
InlineResponse200.prototype['emails_url'] = undefined;

/**
 * @member {String} emojis_url
 */
InlineResponse200.prototype['emojis_url'] = undefined;

/**
 * @member {String} events_url
 */
InlineResponse200.prototype['events_url'] = undefined;

/**
 * @member {String} feeds_url
 */
InlineResponse200.prototype['feeds_url'] = undefined;

/**
 * @member {String} followers_url
 */
InlineResponse200.prototype['followers_url'] = undefined;

/**
 * @member {String} following_url
 */
InlineResponse200.prototype['following_url'] = undefined;

/**
 * @member {String} gists_url
 */
InlineResponse200.prototype['gists_url'] = undefined;

/**
 * @member {String} hub_url
 */
InlineResponse200.prototype['hub_url'] = undefined;

/**
 * @member {String} issue_search_url
 */
InlineResponse200.prototype['issue_search_url'] = undefined;

/**
 * @member {String} issues_url
 */
InlineResponse200.prototype['issues_url'] = undefined;

/**
 * @member {String} keys_url
 */
InlineResponse200.prototype['keys_url'] = undefined;

/**
 * @member {String} label_search_url
 */
InlineResponse200.prototype['label_search_url'] = undefined;

/**
 * @member {String} notifications_url
 */
InlineResponse200.prototype['notifications_url'] = undefined;

/**
 * @member {String} organization_repositories_url
 */
InlineResponse200.prototype['organization_repositories_url'] = undefined;

/**
 * @member {String} organization_teams_url
 */
InlineResponse200.prototype['organization_teams_url'] = undefined;

/**
 * @member {String} organization_url
 */
InlineResponse200.prototype['organization_url'] = undefined;

/**
 * @member {String} public_gists_url
 */
InlineResponse200.prototype['public_gists_url'] = undefined;

/**
 * @member {String} rate_limit_url
 */
InlineResponse200.prototype['rate_limit_url'] = undefined;

/**
 * @member {String} repository_search_url
 */
InlineResponse200.prototype['repository_search_url'] = undefined;

/**
 * @member {String} repository_url
 */
InlineResponse200.prototype['repository_url'] = undefined;

/**
 * @member {String} starred_gists_url
 */
InlineResponse200.prototype['starred_gists_url'] = undefined;

/**
 * @member {String} starred_url
 */
InlineResponse200.prototype['starred_url'] = undefined;

/**
 * @member {String} topic_search_url
 */
InlineResponse200.prototype['topic_search_url'] = undefined;

/**
 * @member {String} user_organizations_url
 */
InlineResponse200.prototype['user_organizations_url'] = undefined;

/**
 * @member {String} user_repositories_url
 */
InlineResponse200.prototype['user_repositories_url'] = undefined;

/**
 * @member {String} user_search_url
 */
InlineResponse200.prototype['user_search_url'] = undefined;

/**
 * @member {String} user_url
 */
InlineResponse200.prototype['user_url'] = undefined;






export default InlineResponse200;

