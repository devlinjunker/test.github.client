/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PorterLargeFile model module.
 * @module model/PorterLargeFile
 * @version 0.0.5
 */
class PorterLargeFile {
    /**
     * Constructs a new <code>PorterLargeFile</code>.
     * Porter Large File
     * @alias module:model/PorterLargeFile
     * @param oid {String} 
     * @param path {String} 
     * @param refName {String} 
     * @param size {Number} 
     */
    constructor(oid, path, refName, size) { 
        
        PorterLargeFile.initialize(this, oid, path, refName, size);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, oid, path, refName, size) { 
        obj['oid'] = oid;
        obj['path'] = path;
        obj['ref_name'] = refName;
        obj['size'] = size;
    }

    /**
     * Constructs a <code>PorterLargeFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PorterLargeFile} obj Optional instance to populate.
     * @return {module:model/PorterLargeFile} The populated <code>PorterLargeFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PorterLargeFile();

            if (data.hasOwnProperty('oid')) {
                obj['oid'] = ApiClient.convertToType(data['oid'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('ref_name')) {
                obj['ref_name'] = ApiClient.convertToType(data['ref_name'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} oid
 */
PorterLargeFile.prototype['oid'] = undefined;

/**
 * @member {String} path
 */
PorterLargeFile.prototype['path'] = undefined;

/**
 * @member {String} ref_name
 */
PorterLargeFile.prototype['ref_name'] = undefined;

/**
 * @member {Number} size
 */
PorterLargeFile.prototype['size'] = undefined;






export default PorterLargeFile;

