/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineObject43 model module.
 * @module model/InlineObject43
 * @version 0.0.5
 */
class InlineObject43 {
    /**
     * Constructs a new <code>InlineObject43</code>.
     * @alias module:model/InlineObject43
     */
    constructor() { 
        
        InlineObject43.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineObject43</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject43} obj Optional instance to populate.
     * @return {module:model/InlineObject43} The populated <code>InlineObject43</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject43();

            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('organization_permission')) {
                obj['organization_permission'] = ApiClient.convertToType(data['organization_permission'], 'String');
            }
            if (data.hasOwnProperty('private')) {
                obj['private'] = ApiClient.convertToType(data['private'], 'Boolean');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Body of the project
 * @member {String} body
 */
InlineObject43.prototype['body'] = undefined;

/**
 * Name of the project
 * @member {String} name
 */
InlineObject43.prototype['name'] = undefined;

/**
 * The baseline permission that all organization members have on this project
 * @member {module:model/InlineObject43.OrganizationPermissionEnum} organization_permission
 */
InlineObject43.prototype['organization_permission'] = undefined;

/**
 * Whether or not this project can be seen by everyone.
 * @member {Boolean} private
 */
InlineObject43.prototype['private'] = undefined;

/**
 * State of the project; either 'open' or 'closed'
 * @member {String} state
 */
InlineObject43.prototype['state'] = undefined;





/**
 * Allowed values for the <code>organization_permission</code> property.
 * @enum {String}
 * @readonly
 */
InlineObject43['OrganizationPermissionEnum'] = {

    /**
     * value: "read"
     * @const
     */
    "read": "read",

    /**
     * value: "write"
     * @const
     */
    "write": "write",

    /**
     * value: "admin"
     * @const
     */
    "admin": "admin",

    /**
     * value: "none"
     * @const
     */
    "none": "none"
};



export default InlineObject43;

