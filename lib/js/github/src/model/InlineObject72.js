/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReposOwnerRepoHooksConfig from './ReposOwnerRepoHooksConfig';

/**
 * The InlineObject72 model module.
 * @module model/InlineObject72
 * @version 0.0.5
 */
class InlineObject72 {
    /**
     * Constructs a new <code>InlineObject72</code>.
     * @alias module:model/InlineObject72
     * @param config {module:model/ReposOwnerRepoHooksConfig} 
     */
    constructor(config) { 
        
        InlineObject72.initialize(this, config);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, config) { 
        obj['config'] = config;
    }

    /**
     * Constructs a <code>InlineObject72</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject72} obj Optional instance to populate.
     * @return {module:model/InlineObject72} The populated <code>InlineObject72</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject72();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('config')) {
                obj['config'] = ReposOwnerRepoHooksConfig.constructFromObject(data['config']);
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
 * @member {Boolean} active
 * @default true
 */
InlineObject72.prototype['active'] = true;

/**
 * @member {module:model/ReposOwnerRepoHooksConfig} config
 */
InlineObject72.prototype['config'] = undefined;

/**
 * Determines what [events](https://developer.github.com/webhooks/event-payloads) the hook is triggered for.
 * @member {Array.<String>} events
 */
InlineObject72.prototype['events'] = undefined;

/**
 * Use `web` to create a webhook. Default: `web`. This parameter only accepts the value `web`.
 * @member {String} name
 */
InlineObject72.prototype['name'] = undefined;






export default InlineObject72;

