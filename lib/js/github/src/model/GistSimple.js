/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GistSimpleFiles from './GistSimpleFiles';
import SimpleUser from './SimpleUser';

/**
 * The GistSimple model module.
 * @module model/GistSimple
 * @version 0.0.5
 */
class GistSimple {
    /**
     * Constructs a new <code>GistSimple</code>.
     * Gist Simple
     * @alias module:model/GistSimple
     */
    constructor() { 
        
        GistSimple.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GistSimple</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GistSimple} obj Optional instance to populate.
     * @return {module:model/GistSimple} The populated <code>GistSimple</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GistSimple();

            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'Number');
            }
            if (data.hasOwnProperty('comments_url')) {
                obj['comments_url'] = ApiClient.convertToType(data['comments_url'], 'String');
            }
            if (data.hasOwnProperty('commits_url')) {
                obj['commits_url'] = ApiClient.convertToType(data['commits_url'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('files')) {
                obj['files'] = ApiClient.convertToType(data['files'], {'String': GistSimpleFiles});
            }
            if (data.hasOwnProperty('forks_url')) {
                obj['forks_url'] = ApiClient.convertToType(data['forks_url'], 'String');
            }
            if (data.hasOwnProperty('git_pull_url')) {
                obj['git_pull_url'] = ApiClient.convertToType(data['git_pull_url'], 'String');
            }
            if (data.hasOwnProperty('git_push_url')) {
                obj['git_push_url'] = ApiClient.convertToType(data['git_push_url'], 'String');
            }
            if (data.hasOwnProperty('html_url')) {
                obj['html_url'] = ApiClient.convertToType(data['html_url'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('node_id')) {
                obj['node_id'] = ApiClient.convertToType(data['node_id'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = SimpleUser.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('public')) {
                obj['public'] = ApiClient.convertToType(data['public'], 'Boolean');
            }
            if (data.hasOwnProperty('truncated')) {
                obj['truncated'] = ApiClient.convertToType(data['truncated'], 'Boolean');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Number} comments
 */
GistSimple.prototype['comments'] = undefined;

/**
 * @member {String} comments_url
 */
GistSimple.prototype['comments_url'] = undefined;

/**
 * @member {String} commits_url
 */
GistSimple.prototype['commits_url'] = undefined;

/**
 * @member {String} created_at
 */
GistSimple.prototype['created_at'] = undefined;

/**
 * @member {String} description
 */
GistSimple.prototype['description'] = undefined;

/**
 * @member {Object.<String, module:model/GistSimpleFiles>} files
 */
GistSimple.prototype['files'] = undefined;

/**
 * @member {String} forks_url
 */
GistSimple.prototype['forks_url'] = undefined;

/**
 * @member {String} git_pull_url
 */
GistSimple.prototype['git_pull_url'] = undefined;

/**
 * @member {String} git_push_url
 */
GistSimple.prototype['git_push_url'] = undefined;

/**
 * @member {String} html_url
 */
GistSimple.prototype['html_url'] = undefined;

/**
 * @member {String} id
 */
GistSimple.prototype['id'] = undefined;

/**
 * @member {String} node_id
 */
GistSimple.prototype['node_id'] = undefined;

/**
 * @member {module:model/SimpleUser} owner
 */
GistSimple.prototype['owner'] = undefined;

/**
 * @member {Boolean} public
 */
GistSimple.prototype['public'] = undefined;

/**
 * @member {Boolean} truncated
 */
GistSimple.prototype['truncated'] = undefined;

/**
 * @member {String} updated_at
 */
GistSimple.prototype['updated_at'] = undefined;

/**
 * @member {String} url
 */
GistSimple.prototype['url'] = undefined;

/**
 * @member {String} user
 */
GistSimple.prototype['user'] = undefined;






export default GistSimple;

