/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InstallationPermissions model module.
 * @module model/InstallationPermissions
 * @version 0.0.5
 */
class InstallationPermissions {
    /**
     * Constructs a new <code>InstallationPermissions</code>.
     * @alias module:model/InstallationPermissions
     */
    constructor() { 
        
        InstallationPermissions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstallationPermissions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstallationPermissions} obj Optional instance to populate.
     * @return {module:model/InstallationPermissions} The populated <code>InstallationPermissions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstallationPermissions();

            if (data.hasOwnProperty('checks')) {
                obj['checks'] = ApiClient.convertToType(data['checks'], 'String');
            }
            if (data.hasOwnProperty('contents')) {
                obj['contents'] = ApiClient.convertToType(data['contents'], 'String');
            }
            if (data.hasOwnProperty('deployments')) {
                obj['deployments'] = ApiClient.convertToType(data['deployments'], 'String');
            }
            if (data.hasOwnProperty('issues')) {
                obj['issues'] = ApiClient.convertToType(data['issues'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], 'String');
            }
            if (data.hasOwnProperty('organization_administration')) {
                obj['organization_administration'] = ApiClient.convertToType(data['organization_administration'], 'String');
            }
            if (data.hasOwnProperty('pull_requests')) {
                obj['pull_requests'] = ApiClient.convertToType(data['pull_requests'], 'String');
            }
            if (data.hasOwnProperty('statuses')) {
                obj['statuses'] = ApiClient.convertToType(data['statuses'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} checks
 */
InstallationPermissions.prototype['checks'] = undefined;

/**
 * @member {String} contents
 */
InstallationPermissions.prototype['contents'] = undefined;

/**
 * @member {String} deployments
 */
InstallationPermissions.prototype['deployments'] = undefined;

/**
 * @member {String} issues
 */
InstallationPermissions.prototype['issues'] = undefined;

/**
 * @member {String} metadata
 */
InstallationPermissions.prototype['metadata'] = undefined;

/**
 * @member {String} organization_administration
 */
InstallationPermissions.prototype['organization_administration'] = undefined;

/**
 * @member {String} pull_requests
 */
InstallationPermissions.prototype['pull_requests'] = undefined;

/**
 * @member {String} statuses
 */
InstallationPermissions.prototype['statuses'] = undefined;






export default InstallationPermissions;

