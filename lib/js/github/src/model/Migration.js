/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AnyType from './AnyType';
import Repository from './Repository';
import SimpleUser from './SimpleUser';

/**
 * The Migration model module.
 * @module model/Migration
 * @version 0.0.5
 */
class Migration {
    /**
     * Constructs a new <code>Migration</code>.
     * A migration.
     * @alias module:model/Migration
     * @param createdAt {Date} 
     * @param excludeAttachments {Boolean} 
     * @param guid {String} 
     * @param id {Number} 
     * @param lockRepositories {Boolean} 
     * @param nodeId {String} 
     * @param owner {module:model/SimpleUser} 
     * @param repositories {Array.<module:model/Repository>} 
     * @param state {String} 
     * @param updatedAt {Date} 
     * @param url {String} 
     */
    constructor(createdAt, excludeAttachments, guid, id, lockRepositories, nodeId, owner, repositories, state, updatedAt, url) { 
        
        Migration.initialize(this, createdAt, excludeAttachments, guid, id, lockRepositories, nodeId, owner, repositories, state, updatedAt, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, excludeAttachments, guid, id, lockRepositories, nodeId, owner, repositories, state, updatedAt, url) { 
        obj['created_at'] = createdAt;
        obj['exclude_attachments'] = excludeAttachments;
        obj['guid'] = guid;
        obj['id'] = id;
        obj['lock_repositories'] = lockRepositories;
        obj['node_id'] = nodeId;
        obj['owner'] = owner;
        obj['repositories'] = repositories;
        obj['state'] = state;
        obj['updated_at'] = updatedAt;
        obj['url'] = url;
    }

    /**
     * Constructs a <code>Migration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Migration} obj Optional instance to populate.
     * @return {module:model/Migration} The populated <code>Migration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Migration();

            if (data.hasOwnProperty('archive_url')) {
                obj['archive_url'] = ApiClient.convertToType(data['archive_url'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('exclude')) {
                obj['exclude'] = ApiClient.convertToType(data['exclude'], [AnyType]);
            }
            if (data.hasOwnProperty('exclude_attachments')) {
                obj['exclude_attachments'] = ApiClient.convertToType(data['exclude_attachments'], 'Boolean');
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('lock_repositories')) {
                obj['lock_repositories'] = ApiClient.convertToType(data['lock_repositories'], 'Boolean');
            }
            if (data.hasOwnProperty('node_id')) {
                obj['node_id'] = ApiClient.convertToType(data['node_id'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], SimpleUser);
            }
            if (data.hasOwnProperty('repositories')) {
                obj['repositories'] = ApiClient.convertToType(data['repositories'], [Repository]);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} archive_url
 */
Migration.prototype['archive_url'] = undefined;

/**
 * @member {Date} created_at
 */
Migration.prototype['created_at'] = undefined;

/**
 * @member {Array.<module:model/AnyType>} exclude
 */
Migration.prototype['exclude'] = undefined;

/**
 * @member {Boolean} exclude_attachments
 */
Migration.prototype['exclude_attachments'] = undefined;

/**
 * @member {String} guid
 */
Migration.prototype['guid'] = undefined;

/**
 * @member {Number} id
 */
Migration.prototype['id'] = undefined;

/**
 * @member {Boolean} lock_repositories
 */
Migration.prototype['lock_repositories'] = undefined;

/**
 * @member {String} node_id
 */
Migration.prototype['node_id'] = undefined;

/**
 * @member {module:model/SimpleUser} owner
 */
Migration.prototype['owner'] = undefined;

/**
 * @member {Array.<module:model/Repository>} repositories
 */
Migration.prototype['repositories'] = undefined;

/**
 * @member {String} state
 */
Migration.prototype['state'] = undefined;

/**
 * @member {Date} updated_at
 */
Migration.prototype['updated_at'] = undefined;

/**
 * @member {String} url
 */
Migration.prototype['url'] = undefined;






export default Migration;

