/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Runner model module.
 * @module model/Runner
 * @version 0.0.5
 */
class Runner {
    /**
     * Constructs a new <code>Runner</code>.
     * A self hosted runner
     * @alias module:model/Runner
     * @param id {Number} The id of the runner.
     * @param name {String} The name of the runner.
     * @param os {String} The Operating System of the runner.
     * @param status {String} The status of the runner.
     */
    constructor(id, name, os, status) { 
        
        Runner.initialize(this, id, name, os, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, os, status) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['os'] = os;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>Runner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Runner} obj Optional instance to populate.
     * @return {module:model/Runner} The populated <code>Runner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Runner();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('os')) {
                obj['os'] = ApiClient.convertToType(data['os'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The id of the runner.
 * @member {Number} id
 */
Runner.prototype['id'] = undefined;

/**
 * The name of the runner.
 * @member {String} name
 */
Runner.prototype['name'] = undefined;

/**
 * The Operating System of the runner.
 * @member {String} os
 */
Runner.prototype['os'] = undefined;

/**
 * The status of the runner.
 * @member {String} status
 */
Runner.prototype['status'] = undefined;






export default Runner;

