/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrgsOrgHooksHookIdConfig model module.
 * @module model/OrgsOrgHooksHookIdConfig
 * @version 0.0.5
 */
class OrgsOrgHooksHookIdConfig {
    /**
     * Constructs a new <code>OrgsOrgHooksHookIdConfig</code>.
     * Key/value pairs to provide settings for this webhook. [These are defined below](https://developer.github.com/v3/orgs/hooks/#update-hook-config-params).
     * @alias module:model/OrgsOrgHooksHookIdConfig
     * @param url {String} The URL to which the payloads will be delivered.
     */
    constructor(url) { 
        
        OrgsOrgHooksHookIdConfig.initialize(this, url);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, url) { 
        obj['url'] = url;
    }

    /**
     * Constructs a <code>OrgsOrgHooksHookIdConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrgsOrgHooksHookIdConfig} obj Optional instance to populate.
     * @return {module:model/OrgsOrgHooksHookIdConfig} The populated <code>OrgsOrgHooksHookIdConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrgsOrgHooksHookIdConfig();

            if (data.hasOwnProperty('content_type')) {
                obj['content_type'] = ApiClient.convertToType(data['content_type'], 'String');
            }
            if (data.hasOwnProperty('insecure_ssl')) {
                obj['insecure_ssl'] = ApiClient.convertToType(data['insecure_ssl'], 'String');
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.
 * @member {String} content_type
 */
OrgsOrgHooksHookIdConfig.prototype['content_type'] = undefined;

/**
 * Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**
 * @member {String} insecure_ssl
 */
OrgsOrgHooksHookIdConfig.prototype['insecure_ssl'] = undefined;

/**
 * If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://developer.github.com/webhooks/event-payloads/#delivery-headers) header.
 * @member {String} secret
 */
OrgsOrgHooksHookIdConfig.prototype['secret'] = undefined;

/**
 * The URL to which the payloads will be delivered.
 * @member {String} url
 */
OrgsOrgHooksHookIdConfig.prototype['url'] = undefined;






export default OrgsOrgHooksHookIdConfig;

