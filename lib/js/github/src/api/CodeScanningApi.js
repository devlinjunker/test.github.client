/**
 * GitHub v3 REST API
 * GitHub's v3 REST API.
 *
 * The version of the OpenAPI document: 0.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BasicError from '../model/BasicError';
import CodeScanningAlert from '../model/CodeScanningAlert';
import InlineResponse503 from '../model/InlineResponse503';

/**
* CodeScanning service.
* @module api/CodeScanningApi
* @version 0.0.5
*/
export default class CodeScanningApi {

    /**
    * Constructs a new CodeScanningApi. 
    * @alias module:api/CodeScanningApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the codeScanningGetAlert operation.
     * @callback module:api/CodeScanningApi~codeScanningGetAlertCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CodeScanningAlert} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a code scanning alert
     * Gets a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` read permission to use this endpoint.  The security `alert_id` is found at the end of the security alert's URL. For example, the security alert ID for `https://github.com/Octo-org/octo-repo/security/code-scanning/88` is `88`.
     * @param {String} owner 
     * @param {String} repo 
     * @param {Number} alertId alert_id parameter
     * @param {module:api/CodeScanningApi~codeScanningGetAlertCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CodeScanningAlert}
     */
    codeScanningGetAlert(owner, repo, alertId, callback) {
      let postBody = null;
      // verify the required parameter 'owner' is set
      if (owner === undefined || owner === null) {
        throw new Error("Missing the required parameter 'owner' when calling codeScanningGetAlert");
      }
      // verify the required parameter 'repo' is set
      if (repo === undefined || repo === null) {
        throw new Error("Missing the required parameter 'repo' when calling codeScanningGetAlert");
      }
      // verify the required parameter 'alertId' is set
      if (alertId === undefined || alertId === null) {
        throw new Error("Missing the required parameter 'alertId' when calling codeScanningGetAlert");
      }

      let pathParams = {
        'owner': owner,
        'repo': repo,
        'alert_id': alertId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CodeScanningAlert;
      return this.apiClient.callApi(
        '/repos/{owner}/{repo}/code-scanning/alerts/{alert_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the codeScanningListAlertsForRepo operation.
     * @callback module:api/CodeScanningApi~codeScanningListAlertsForRepoCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CodeScanningAlert>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List code scanning alerts for a repository
     * Lists all open code scanning alerts for the default branch (usually `master`) and protected branches in a repository. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` read permission to use this endpoint.
     * @param {String} owner 
     * @param {String} repo 
     * @param {Object} opts Optional parameters
     * @param {String} opts.state Set to `closed` to list only closed code scanning alerts. (default to 'open')
     * @param {String} opts.ref Returns a list of code scanning alerts for a specific brach reference. The `ref` must be formatted as `heads/<branch name>`.
     * @param {module:api/CodeScanningApi~codeScanningListAlertsForRepoCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CodeScanningAlert>}
     */
    codeScanningListAlertsForRepo(owner, repo, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'owner' is set
      if (owner === undefined || owner === null) {
        throw new Error("Missing the required parameter 'owner' when calling codeScanningListAlertsForRepo");
      }
      // verify the required parameter 'repo' is set
      if (repo === undefined || repo === null) {
        throw new Error("Missing the required parameter 'repo' when calling codeScanningListAlertsForRepo");
      }

      let pathParams = {
        'owner': owner,
        'repo': repo
      };
      let queryParams = {
        'state': opts['state'],
        'ref': opts['ref']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [CodeScanningAlert];
      return this.apiClient.callApi(
        '/repos/{owner}/{repo}/code-scanning/alerts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
